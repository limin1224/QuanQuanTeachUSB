C51 COMPILER V7.06   MAIN                                                                  02/25/2012 23:06:10 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN Main.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE Main.c BROWSE DEBUG OBJECTEXTEND TABS(1)

stmt level    source

   1          /******************************************************************
   2             本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3             
   4                  欢迎访问我的USB专区：http://group.ednchina.com/93/
   5                  欢迎访问我的blog：   http://www.ednchina.com/blog/computer00
   6                                       http://computer00.21ic.org
   7          
   8                  感谢PCB赞助商――电子园： http://bbs.cepark.com/
   9          
  10          main.c file
  11          
  12          作者：电脑圈圈
  13          建立日期: 2008.06.27
  14          修改日期: 2012.01.24
  15          版本：V1.1
  16          版权所有，盗版必究。
  17          Copyright(C) 电脑圈圈 2008-2018
  18          All rights reserved            
  19          *******************************************************************/
  20          
  21          #include <AT89X52.H>  //头文件
  22          #include "Key.h"
  23          #include "Led.h"
  24          #include "UART.h"
  25          #include "pdiusbd12.h"
  26          #include "UsbCore.h"
  27          #include "config.h"
  28          #include <math.h>
  29          
  30          code uint8 HeadTable[][74]={
  31          "********************************************************************\r\n",
  32          "******             《圈圈教你玩USB》之 USB触摸屏              ******\r\n",
  33          "******                      AT89S52 CPU                       ******\r\n",
  34          "******                  建立日期：",__DATE__,"                 ******\r\n",
  35          "******                   建立时间：",__TIME__,"                   ******\r\n",
  36          "******                    作者：电脑圈圈                      ******\r\n",
  37          "******                    欢迎访问作者的                      ******\r\n",
  38          "******           USB专区：http://group.ednchina.com/93/       ******\r\n",
  39          "******      BLOG1：http://www.ednchina.com/blog/computer00    ******\r\n",
  40          "******                BLOG2：http://computer00.21ic.org       ******\r\n",
  41          "******                  请按K1-K8分别进行测试                 ******\r\n",
  42          "******    K1:回到中心  K2:画直线   K3:画三角形  K4:画正方形   ******\r\n",
  43          "******    K5:画圆      K6:正弦曲线 K7:无        K8:无         ******\r\n",
  44          "********************************************************************\r\n",
  45          };
  46          
  47          /********************************************************************
  48          函数功能：中断处理函数。
  49          入口参数：无。
  50          返    回：无。
  51          备    注：无。
  52          ********************************************************************/
  53          void ProcessInterrupt(void)
  54          {
  55   1       int8 InterruptSource;
C51 COMPILER V7.06   MAIN                                                                  02/25/2012 23:06:10 PAGE 2   

  56   1       if(D12GetIntPin() == 0) //如果有中断发生
  57   1       {
  58   2        //有中断发生，处理之
  59   2        D12WriteCommand(READ_INTERRUPT_REGISTER);  //写读中断寄存器的命令
  60   2        InterruptSource=D12ReadByte(); //读回第一字节的中断寄存器
  61   2        if(InterruptSource&0x80)UsbBusSuspend(); //总线挂起中断处理
  62   2        if(InterruptSource&0x40)UsbBusReset();   //总线复位中断处理
  63   2        if(InterruptSource&0x01)UsbEp0Out();     //端点0输出中断处理
  64   2        if(InterruptSource&0x02)UsbEp0In();      //端点0输入中断处理
  65   2        if(InterruptSource&0x04)UsbEp1Out();     //端点1输出中断处理
  66   2        if(InterruptSource&0x08)UsbEp1In();      //端点1输入中断处理
  67   2        if(InterruptSource&0x10)UsbEp2Out();     //端点2输出中断处理
  68   2        if(InterruptSource&0x20)UsbEp2In();      //端点2输入中断处理
  69   2       }
  70   1      }
  71          ////////////////////////End of function//////////////////////////////
  72          
  73          /********************************************************************
  74          函数功能：移动光标。
  75          入口参数：x：x轴坐标；y：y轴坐标
  76          返    回：无。
  77          备    注：无。
  78          ********************************************************************/
  79          void MoveTo(uint16 x, uint16 y)
  80          {
  81   1       //需要返回的5字节报告的缓冲
  82   1       //Buf[0]的D0就是左键，D1就是右键，D2就是中键
  83   1       //Buf[1]为X轴低字节，Buf[2]为X轴高字节，
  84   1       //Buf[3]为Y轴低字节，Buf[4]为Y轴高字节，
  85   1       uint8 Buf[5]={0,0,0,0,0};
  86   1       Buf[0] = 0x00;
  87   1       Buf[1] = x & 0xFF;
  88   1       Buf[2] = (x >> 8) & 0xFF;
  89   1       Buf[3] = y & 0xFF;
  90   1       Buf[4] = (y >> 8) & 0xFF;
  91   1       while(Ep1InIsBusy) //等待之前的数据发送完毕
  92   1       {
  93   2        ProcessInterrupt();  //处理中断
  94   2       }
  95   1       if(ConfigValue == 0) return;
  96   1       //报告准备好了，通过端点1返回，长度为5字节。
  97   1       D12WriteEndpointBuffer(3, 5, Buf);
  98   1       Ep1InIsBusy=1;  //设置端点忙标志。
  99   1      }
 100          ////////////////////////End of function//////////////////////////////
 101          
 102          /********************************************************************
 103          函数功能：画线段的函数。
 104          入口参数：x：x轴坐标；y：y轴坐标
 105          返    回：无。
 106          备    注：无。
 107          ********************************************************************/
 108          void LineTo(uint16 x, uint16 y)
 109          {
 110   1       //需要返回的5字节报告的缓冲
 111   1       //Buf[0]的D0就是左键，D1就是右键，D2就是中键
 112   1       //Buf[1]为X轴低字节，Buf[2]为X轴高字节，
 113   1       //Buf[3]为Y轴低字节，Buf[4]为Y轴高字节，
 114   1       uint8 Buf[5]={0,0,0,0,0};
 115   1       Buf[0] = 0x01; //左键按下
 116   1       Buf[1] = x & 0xFF;
 117   1       Buf[2] = (x >> 8) & 0xFF;
C51 COMPILER V7.06   MAIN                                                                  02/25/2012 23:06:10 PAGE 3   

 118   1       Buf[3] = y & 0xFF;
 119   1       Buf[4] = (y >> 8) & 0xFF;
 120   1       while(Ep1InIsBusy) //等待之前的数据发送完毕
 121   1       {
 122   2        ProcessInterrupt(); //处理中断
 123   2       }
 124   1       if(ConfigValue == 0) return;
 125   1       //报告准备好了，通过端点1返回，长度为5字节。
 126   1       D12WriteEndpointBuffer(3, 5, Buf);
 127   1       Ep1InIsBusy=1;  //设置端点忙标志。
 128   1      }
 129          ////////////////////////End of function//////////////////////////////
 130          
 131          /********************************************************************
 132          函数功能：画圆的函数。
 133          入口参数：x：x轴坐标；y：y轴坐标；r：半径
 134          返    回：无。
 135          备    注：无。
 136          ********************************************************************/
 137          void DrawCircle(uint16 x, uint16 y, uint16 r)
 138          {
 139   1       uint16 i, px, py;
 140   1       MoveTo(x + r, y);
 141   1       LineTo(x + r, y);
 142   1       for(i = 0; i < 360; i ++)
 143   1       {
 144   2        px = x + r * cos((i * 1.0) / 180 * 3.1415926);
 145   2        py = y + r * sin((i * 1.0) / 180 * 3.1415926);
 146   2        LineTo(px, py);
 147   2       }
 148   1       MoveTo(x + r, y);
 149   1      }
 150          ////////////////////////End of function//////////////////////////////
 151          
 152          
 153          /********************************************************************
 154          函数功能：画正弦曲线的函数。
 155          入口参数：无。
 156          返    回：无。
 157          备    注：无。
 158          ********************************************************************/
 159          void DrawSinCurve(void)
 160          {
 161   1       uint16 px, py;
 162   1       MoveTo(4000, 2000);
 163   1       LineTo(4000, 2000);
 164   1       LineTo(400, 2000);
 165   1       for(px = 400; px <= 4000; px += 10)
 166   1       {
 167   2        py = 2000 - 1000 * sin(((px - 400) / 2.5) / 180 * 3.1415926);
 168   2        LineTo(px, py);
 169   2       }
 170   1       MoveTo(px, py);
 171   1      }
 172          ////////////////////////End of function//////////////////////////////
 173          
 174          /********************************************************************
 175          函数功能：根据按键情况返回报告的函数。
 176          入口参数：无。
 177          返    回：无。
 178          备    注：无。
 179          ********************************************************************/
C51 COMPILER V7.06   MAIN                                                                  02/25/2012 23:06:10 PAGE 4   

 180          void SendReport(void)
 181          {
 182   1       if(KeyDown & (KEY1))
 183   1       {
 184   2        MoveTo(4096 / 2, 4096 /2); //移动到屏幕中心
 185   2       }
 186   1       if(KeyDown & (KEY2)) //画直线
 187   1       {
 188   2        MoveTo(1000, 1000); //移动到（1000，1000）
 189   2        LineTo(1000, 1000); //开始画线
 190   2        LineTo(3000, 3000); //画线到（3000，3000）
 191   2        MoveTo(3000, 3000); //松开鼠标左键
 192   2       }
 193   1       if(KeyDown & (KEY3)) //画三角形
 194   1       {
 195   2        MoveTo(2000, 1000); //移动到（2000，1000）
 196   2        LineTo(2000, 1000); //开始画线
 197   2        LineTo(1000, 3000); //画线到（1000，3000）
 198   2        LineTo(3000, 3000); //画线到（3000，3000）
 199   2        LineTo(2000, 1000); //画线到（2000，1000）
 200   2        MoveTo(2000, 1000); //松开鼠标左键
 201   2       }
 202   1       if(KeyDown & (KEY4)) //画正方形
 203   1       {
 204   2        MoveTo(1000, 1000); //移动到（1000，1000）
 205   2        LineTo(1000, 1000); //开始画线
 206   2        LineTo(1000, 3000); //画线到（1000，3000）
 207   2        LineTo(3000, 3000); //画线到（3000，3000）
 208   2        LineTo(3000, 1000); //画线到（3000，1000）
 209   2        LineTo(1000, 1000); //画线到（1000，1000）
 210   2        MoveTo(1000, 1000); //松开鼠标左键
 211   2       }
 212   1       if(KeyDown & (KEY5))
 213   1       {
 214   2        DrawCircle(2000, 2000, 1000); //画一个圆心在（2000，2000），半径为1000的圆
 215   2       }
 216   1       if(KeyDown & (KEY6))
 217   1       {
 218   2        DrawSinCurve(); //画正弦曲线
 219   2       }
 220   1       //记得清除KeyUp和KeyDown
 221   1       KeyUp=0;
 222   1       KeyDown=0;
 223   1      }
 224          ////////////////////////End of function//////////////////////////////
 225          
 226          /********************************************************************
 227          函数功能：主函数。
 228          入口参数：无。
 229          返    回：无。
 230          备    注：无。
 231          ********************************************************************/
 232          void main(void)  //主函数
 233          {
 234   1       uint8 i;
 235   1       uint16 id;
 236   1       
 237   1       EA=1; //打开中断
 238   1       InitKeyboard(); //初始化按键
 239   1       InitUART();  //初始化串口
 240   1       
 241   1       for(i=0;i<18;i++)   //显示信息
C51 COMPILER V7.06   MAIN                                                                  02/25/2012 23:06:10 PAGE 5   

 242   1       {
 243   2        Prints(HeadTable[i]);
 244   2       }
 245   1       
 246   1       id=D12ReadID();
 247   1      
 248   1       Prints("Your D12 chip\'s ID is: ");
 249   1       PrintShortIntHex(id);
 250   1      
 251   1       if(id==0x1012)
 252   1       {
 253   2        Prints(". ID is correct! Congratulations!\r\n\r\n");
 254   2       }
 255   1       else
 256   1       {
 257   2        Prints(". ID is incorrect! What a pity!\r\n\r\n");
 258   2       }
 259   1       
 260   1       UsbDisconnect();  //先断开USB连接
 261   1       UsbConnect();  //将USB连接上
 262   1       ConfigValue=0; //配置值初始化为0
 263   1       
 264   1       while(1)  //死循环
 265   1       {
 266   2        ProcessInterrupt(); //处理中断
 267   2        if(ConfigValue!=0) //如果已经设置为非0的配置，则可以返回报告数据
 268   2        {
 269   3         LEDs=~KeyPress;  //利用板上8个LED显示按键状态，按下时亮
 270   3         if(!Ep1InIsBusy)  //如果端点1输入没有处于忙状态，则可以发送数据
 271   3         {
 272   4          KeyCanChange=0;  //禁止按键扫描
 273   4          if(KeyUp||KeyDown) //如果有按键事件发生
 274   4          {
 275   5           SendReport();  //则返回报告
 276   5          }
 277   4          KeyCanChange=1;  //允许按键扫描
 278   4         }
 279   3        }
 280   2       }
 281   1      }
 282          ////////////////////////End of function//////////////////////////////


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1034    ----
   CONSTANT SIZE    =   1440    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      38
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
